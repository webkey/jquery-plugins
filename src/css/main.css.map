{"version":3,"sources":["main.css","main.sass","base/_reset.sass","base/_layout.sass","utils/_variables.sass","utils/_mixins.sass","../libs/include-media/dist/_include-media.scss","base/_typography.sass","utils/_placeholders.sass"],"names":[],"mappings":"AAAA,iBAAiB;ACMjB,0DAA0D;AAC1D,yBAAyB;AACzB,0DAA0D;ACR1D,WAAW;AAGX;CACC,+DAA8D;CAC9D,4DAA2D;CAC3D,yBAAwB;CAAI;;AAI7B;CACC,oCAAmC;CAAI;;AACxC;CACC,aAAY;CACZ,YAAW;CAAI;;AAChB;CACC,gBAAe;CAAI;;AACpB;CACC,UAAS;CACT,WAAU;CAAI;;AACf;CACC,uBAAsB;CAAI;;AAC3B;CACC,yBAAwB;CACxB,iBAAgB;CAAI;;AACrB;CACC,gBAAe;CAAI;;AACpB;CACC,qCAAoC;CACpC,kCAAiC;CAAI;;AACtC;CACC,qCAAoC;CACpC,wCAAuC;CAAI;;AAC5C;CACC,cAAa;CAAI;;AAClB;CACC,aAAY;CAAI;;AACjB;CACC,cAAa;CAAI;;AAClB;CACC,sBAAqB;CAAI;;AAC1B;CACC,8BAA6B;CAAI;;AAClC;CACC,aAAY;CACZ,UAAS;CACT,WAAU;CAAI;;AACf;CACC,UAAS;CACT,YAAW;CACX,WAAU;CACV,UAAS;CAAI;;AACd;CACC,iBAAgB;CAChB,WAAU;CACV,UAAS;CAAI;;AACd;CACC,uBAAsB;CAAI;;AAE3B,eAAe;ADhDf,0DAA0D;AAC1D,YAAY;AACZ,0DAA0D;AET1D;CACE,WAAU;CACV,UAAS;CAAI;;AAEf;CACE,kBAAiB;CACjB,mBAAkB;CAClB,YAAW;CACX,WAAU;CAAI;;AAEhB;CACE,gBAAe;CAAI;;AAErB;CACE,qBAA2B;CAAG;;AAEhC;CACE,mBAAkB;CAClB,WAAU;CAEV,0BCqHkB;CDpHlB,oBAAmB;CACnB,uBAAsB;CAAI;;AAE5B;CACE,eAAc;CACd,mBAAkB;CAClB,YAAW;CACX,WAAU;CAEV,6BAA4B;CAAI;;AAElC;CACE,kBCuIgD;CDvIrB;;AAE7B;CE0ME,oBDvE4B;CCwE5B,mBDxE4B;CC6D5B,mBA0F8B;CAzF9B,kBAyF8B;CFrRO;;AGqgBnC;CH1gBJ;EE0ME,iBFrM+B;EEsM/B,gBFtM+B;EAAM;CH2GtC;;AGzGD;CACE,iBCmIyD;CDnIzB;;AAElC;CACE,iBCgIyD;CC+DzD,oBDnEiC;CCoEjC,mBDpEiC;CCyDjC,mBA0F8B;CAzF9B,kBAyF8B;CFvQsC;;AGuflE;CHhgBJ;EEgME,oBDlEoC;ECmEpC,mBDnEoC;EDrHgC;CHgHrE;;AMuYG;CHhgBJ;EEgME,oBDjEoC;ECkEpC,mBDlEoC;EDtHgC;CHuHrE;;AGrHD;CACE,kBCyH0D;CDzHzB;;AAEnC;CACE,kBCsH0D;CC2D1D,oBD7DkC;CC8DlC,mBD9DkC;CCmDlC,mBA0F8B;CAzF9B,kBAyF8B;CFzPsC;;AGyelE;CHlfJ;EEkLE,oBDlEoC;ECmEpC,mBDnEoC;EDvGgC;CH4HrE;;AM6WG;CHlfJ;EEkLE,oBDjEoC;ECkEpC,mBDlEoC;EDxGgC;CHmIrE;;AGjID,cAAc;AF1Dd,0DAA0D;AAC1D,cAAc;AACd,0DAA0D;AMd1D,SAAS;AACT;CACE,iBAAgB;CAAI;;AAEtB;CHQE,iIAJ6H;CGF7H,kBH+BgB;CG9BhB,oBH+BkB;CG9BlB,oCAAmC;CACnC,aAAY;CAEZ,eHqIkB;CGpIlB,uDAA2D;CAC3D,iBAAgB;CAGqB;;AD6hBnC;CCziBJ;EFoEC,kBDnCiB;ECoCjB,iBEzDgC;EAAM;CPkNtC;;AOhND;CACE,WAAU;CHMV,iBAAgB;CGJhB,eH6HmB;CG5HnB,mBHgBkB;CGbmC;;ADohBnD;CC3hBJ;EAOI,iBCCiC;EDDkB;CPsNtD;;AOpND;CACE,iBAAgB;CHmChB,kBAXmB;CAYnB,oBAXqB;CGxBF;;ADghBjB;CClhBJ;EHwCI,kBAXsB;EAYtB,oBI1CiC;EDGhB;CP+NpB;;AMiTG;CClhBJ;EH4CI,gBAZsB;EAatB,oBI9CiC;EDGhB;CPsOpB;;AOpOD;CHuDE,gBAXmB;CAYnB,oBAXqB;CGxCE;;ADygBrB;CC9gBJ;EH2DI,kBAXsB;EAYtB,oBIjEiC;EDUZ;CP2OxB;;AM8RG;CC9gBJ;EH+DI,kBAZsB;EAatB,oBIrEiC;EDUZ;CPkPxB;;AOvPD;CAII,cAAc;CACd,gBAAe;CAAI;;AAEvB;CHuEE,kBAXmB;CAYnB,kBAXqB;CG5DF;;ADsgBjB;CCvgBJ;EH2EI,kBAXsB;EAYtB,oBIxFiC;EDahB;CPgQpB;;AMsQG;CCvgBJ;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","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n/*======================================================*/\n/* NORMALIZE AND RESET */\n/*======================================================*/\n/* reset */\ninput, input:focus, textarea, select {\n\t-webkit-tap-highlight-color: rgba(255, 255, 255, 0) !important;\n\t-webkit-focus-ring-color: rgba(255, 255, 255, 0) !important;\n\toutline: none !important;\n}\n\nbody {\n\t-webkit-font-smoothing: antialiased;\n}\n\nbody, html {\n\theight: 100%;\n\twidth: 100%;\n}\n\nselect[disabled] {\n\tcursor: default;\n}\n\nform {\n\tmargin: 0;\n\tpadding: 0;\n}\n\ninput {\n\tvertical-align: middle;\n}\n\ntextarea, select, input[type=\"text\"], input[type=\"email\"], input[type=\"search\"], input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"], button {\n\t-webkit-appearance: none;\n\tborder-radius: 0;\n}\n\ninput[type=radio], input[type=checkbox], select {\n\tcursor: pointer;\n}\n\ninput[type=\"radio\"]:focus {\n\t-moz-outline-radius: 12px !important;\n\t-moz-outline-offset: 0 !important;\n}\n\ninput[type=\"checkbox\"]:focus {\n\t-moz-outline-offset: -1px !important;\n\t-moz-outline: 1px solid #000 !important;\n}\n\ninput::-ms-clear {\n\tdisplay: none;\n}\n\nblockquote, q {\n\tquotes: none;\n}\n\nblockquote::before, blockquote::after, q::before, q::after {\n\tcontent: none;\n}\n\nins {\n\ttext-decoration: none;\n}\n\ndel {\n\ttext-decoration: line-through;\n}\n\nfieldset {\n\tborder: none;\n\tmargin: 0;\n\tpadding: 0;\n}\n\ntable {\n\tborder: 0;\n\twidth: 100%;\n\tpadding: 0;\n\tmargin: 0;\n}\n\nul {\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n}\n\n*, *::after, *::before {\n\tbox-sizing: border-box;\n}\n\n/* reset end */\n/*======================================================*/\n/* LAYOUT */\n/*======================================================*/\nbody {\n\tpadding: 0;\n\tmargin: 0;\n}\n\n.main {\n\tpadding: 30px 0 0;\n\tposition: relative;\n\tclear: both;\n\tz-index: 4;\n}\n\n.user-content {\n\tpadding: 60px 0;\n}\n\n.content {\n\tmargin: 0 0 2.4rem 0;\n}\n\n.header {\n\tposition: relative;\n\tz-index: 5;\n\tbackground-color: #ee6e73;\n\tpadding-top: 0.5rem;\n\tpadding-bottom: 0.5rem;\n}\n\n.footer {\n\tmargin: 0 auto;\n\tposition: relative;\n\tclear: both;\n\tz-index: 5;\n\tbackground-color: lightgreen;\n}\n\n.max-wrap {\n\tmax-width: 1960px;\n}\n\n.layout {\n\tpadding-right: 20px;\n\tpadding-left: 20px;\n\tmargin-right: auto;\n\tmargin-left: auto;\n}\n\n@media (max-width: 991px) {\n\t.layout {\n\t\tpadding-right: 0;\n\t\tpadding-left: 0;\n\t}\n}\n\n.max-wrap-text {\n\tmax-width: 720px;\n}\n\n.layout-text {\n\tmax-width: 720px;\n\tpadding-right: 40px;\n\tpadding-left: 40px;\n\tmargin-right: auto;\n\tmargin-left: auto;\n}\n\n@media (max-width: 991px) {\n\t.layout-text {\n\t\tpadding-right: 30px;\n\t\tpadding-left: 30px;\n\t}\n}\n\n@media (max-width: 767px) {\n\t.layout-text {\n\t\tpadding-right: 15px;\n\t\tpadding-left: 15px;\n\t}\n}\n\n.max-wrap-flood {\n\tmax-width: 1040px;\n}\n\n.layout-flood {\n\tmax-width: 1040px;\n\tpadding-right: 40px;\n\tpadding-left: 40px;\n\tmargin-right: auto;\n\tmargin-left: auto;\n}\n\n@media (max-width: 991px) {\n\t.layout-flood {\n\t\tpadding-right: 30px;\n\t\tpadding-left: 30px;\n\t}\n}\n\n@media (max-width: 767px) {\n\t.layout-flood {\n\t\tpadding-right: 15px;\n\t\tpadding-left: 15px;\n\t}\n}\n\n/*LAYOUT end*/\n/*======================================================*/\n/*TYPOGRAPHY*/\n/*======================================================*/\n/*base */\nhtml {\n\tfont-size: 62.5%;\n}\n\nbody {\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n\t-webkit-font-smoothing: antialiased;\n\theight: 100%;\n\tcolor: #262626;\n\tbackground: #fff url(../../img/empty.png) repeat fixed;\n\tmin-width: 320px;\n}\n\n@media (max-width: 639px) {\n\tbody {\n\t\tfont-size: 1.6rem;\n\t\tline-height: 1.7;\n\t}\n}\n\nh1, h2, h3, h4, h5, h6 {\n\tpadding: 0;\n\tfont-weight: 400;\n\tcolor: #ee6e73;\n\tmargin: 0 0 2.4rem;\n}\n\n@media (max-width: 639px) {\n\th1, h2, h3, h4, h5, h6 {\n\t\tmargin: 0 0 2rem;\n\t}\n}\n\nh1 {\n\tfont-weight: 300;\n\tfont-size: 3.6rem;\n\tline-height: 5.2rem;\n}\n\n@media (max-width: 1199px) {\n\th1 {\n\t\tfont-size: 3.4rem;\n\t\tline-height: 4.9rem;\n\t}\n}\n\n@media (max-width: 767px) {\n\th1 {\n\t\tfont-size: 3rem;\n\t\tline-height: 4.3rem;\n\t}\n}\n\nh2 {\n\tfont-size: 3rem;\n\tline-height: 4.2rem;\n}\n\n@media (max-width: 1199px) {\n\th2 {\n\t\tfont-size: 2.8rem;\n\t\tline-height: 3.9rem;\n\t}\n}\n\n@media (max-width: 767px) {\n\th2 {\n\t\tfont-size: 2.4rem;\n\t\tline-height: 3.4rem;\n\t}\n}\n\nh2::before {\n\tcontent: '§ ';\n\tdisplay: inline;\n}\n\nh3 {\n\tfont-size: 2.4rem;\n\tline-height: 3rem;\n}\n\n@media (max-width: 1199px) {\n\th3 {\n\t\tfont-size: 2.2rem;\n\t\tline-height: 2.8rem;\n\t}\n}\n\n@media (max-width: 767px) {\n\th3 {\n\t\tfont-size: 1.8rem;\n\t\tline-height: 2.3rem;\n\t}\n}\n\nh4 {\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n}\n\nh5 {\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n}\n\nh6 {\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n\ttext-transform: uppercase;\n}\n\n.text-title {\n\tfont-weight: bold;\n\tfont-size: 1.8rem;\n\tline-height: 2.4rem;\n\tmargin-bottom: 1.2rem;\n}\n\n.content .text-title + ul,\n.content .text-title + ol,\n.content .text-title + table {\n\tmargin-top: 1.2rem;\n}\n\np {\n\tpadding: 0;\n\tmargin: 0 0 2.4rem;\n}\n\nhr {\n\tline-height: 1px;\n\theight: 0;\n\tborder: none;\n\tbackground: none;\n\tborder-bottom: 1px solid #aaa;\n\tmargin-bottom: 2.4rem;\n}\n\na {\n\tcolor: blue;\n\ttext-decoration: underline;\n\tcursor: default;\n}\n\na:link {\n\tcursor: pointer;\n}\n\n.no-touchevents a:hover {\n\ttext-decoration: none;\n}\n\na[href^=\"tel\"],\n.no-touchevents a[href^=\"tel\"]:hover {\n\ttext-decoration: none !important;\n\tcolor: inherit;\n\tcursor: default;\n}\n\na[href^=\"javascript:\"] {\n\tcursor: default;\n}\n\n.bd-lead {\n\tfont-size: 2.3rem;\n\tline-height: 3.5rem;\n\tfont-weight: 300;\n}\n\nimg {\n\tborder: none;\n\tvertical-align: top;\n\tmax-width: 100%;\n}\n\ntable img {\n\tmax-width: none;\n}\n\n.table-auto {\n\tposition: relative;\n\toverflow: auto;\n\tmax-width: 100%;\n\t-webkit-overflow-scrolling: touch;\n\tmargin: 0 0 2.4rem;\n}\n\n.table-auto table {\n\tmargin-bottom: 0;\n\twidth: auto;\n\tmin-width: 100%;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n\twidth: 100%;\n}\n\ntable td, table th {\n\tfont-size: 1.4rem;\n\tline-height: 1.8rem;\n\tcolor: #262626;\n\ttext-align: left;\n\tpadding: 1rem 1.2rem;\n\tbox-sizing: border-box;\n\tborder-color: #aaa;\n}\n\nb, strong, th {\n\tfont-weight: bold;\n}\n\ni, em {\n\tfont-style: italic;\n}\n\ni b, i strong, em b, em strong, b i, b em, strong i, strong em {\n\tfont-weight: bold;\n\tfont-style: italic;\n}\n\n.mark {\n\tcolor: #ff0b4f;\n\tfont-style: inherit;\n\tfont-weight: inherit;\n}\n\n.text-color-alt {\n\tcolor: #aaa;\n}\n\n.align-center {\n\ttext-align: center;\n}\n\n.nobr {\n\twhite-space: nowrap;\n}\n\n.bottom-space {\n\tmargin-bottom: 2.4rem;\n}\n\n.hide {\n\tfont-size: 0;\n\tline-height: 0;\n}\n\n@media (max-width: 1919px) {\n\t.hide-desk-s {\n\t\tdisplay: none !important;\n\t}\n}\n\n@media (max-width: 1599px) {\n\t.hide-lap {\n\t\tdisplay: none !important;\n\t}\n}\n\n@media (max-width: 1365px) {\n\t.hide-net {\n\t\tdisplay: none !important;\n\t}\n}\n\ncode.l, code.red, code.green {\n\tdisplay: inline;\n\tpadding: 0 2px;\n\tmargin: 0;\n}\n\n.green {\n\tcolor: lightseagreen;\n}\n\n.red {\n\tcolor: lightcoral;\n}\n\n.gray {\n\tcolor: #999;\n}\n\n.warning {\n\tdisplay: block;\n\tbackground-image: url(../../img/icon-warning.svg);\n\tbackground-repeat: no-repeat;\n\tbackground-position: 10px 10px;\n\tbackground-size: 24px;\n\tpadding: 10px 10px 10px 45px;\n\tbackground-color: rgba(238, 110, 115, 0.1);\n}\n\n.article-content p + h2,\n.article-content ul + h2,\n.article-content ol + h2 {\n\tmargin-top: 2.4rem;\n}\n\n@media (max-width: 639px) {\n\t.article-content p + h2,\n\t.article-content ul + h2,\n\t.article-content ol + h2 {\n\t\tmargin-top: 2rem;\n\t}\n}\n\n.article-content p + h3,\n.article-content ul + h3,\n.article-content ol + h3 {\n\tmargin-top: 2.4rem;\n}\n\n@media (max-width: 639px) {\n\t.article-content p + h3,\n\t.article-content ul + h3,\n\t.article-content ol + h3 {\n\t\tmargin-top: 2rem;\n\t}\n}\n\n.article-content p + h4,\n.article-content ul + h4,\n.article-content ol + h4 {\n\tmargin-top: 2.4rem;\n}\n\n@media (max-width: 639px) {\n\t.article-content p + h4,\n\t.article-content ul + h4,\n\t.article-content ol + h4 {\n\t\tmargin-top: 2rem;\n\t}\n}\n\n.article-content p + h5,\n.article-content ul + h5,\n.article-content ol + h5 {\n\tmargin-top: 2.4rem;\n}\n\n@media (max-width: 639px) {\n\t.article-content p + h5,\n\t.article-content ul + h5,\n\t.article-content ol + h5 {\n\t\tmargin-top: 2rem;\n\t}\n}\n\n/*base end */\n/*table */\n.article-content table {\n\tmargin-bottom: 2.4rem;\n}\n\n.article-content .table-auto table {\n\tmargin-bottom: 0;\n}\n\n.article-content .tbl {\n\tborder: none;\n}\n\n.article-content .tbl td,\n.article-content .tbl th {\n\tcolor: #262626;\n\tbackground-color: #f2f2f2;\n\tborder: 0 solid #aaa;\n\tfont-size: 1.4rem;\n\tline-height: 1.2;\n}\n\n.article-content .tbl td:first-child, .article-content .tbl td:first-child,\n.article-content .tbl th:first-child,\n.article-content .tbl th:first-child {\n\tborder-left-width: 1px;\n}\n\n.article-content .tbl td:last-child, .article-content .tbl td:last-child,\n.article-content .tbl th:last-child,\n.article-content .tbl th:last-child {\n\tborder-right-width: 1px;\n}\n\n.article-content .tbl td {\n\tborder-top-width: 1px;\n}\n\n.article-content .tbl tbody tr:first-child td {\n\tborder-top-width: 0;\n}\n\n.article-content .tbl tbody tr:nth-child(even) td {\n\tbackground: #fafafa;\n}\n\n.article-content .tbl th,\n.article-content .tbl thead td {\n\tfont-weight: bold;\n\tfont-size: 1.6rem;\n\ttext-align: left;\n}\n\n.article-content .tbl th,\n.article-content .tbl thead td,\n.article-content .tbl tfoot td {\n\tbackground: #f2f2f2;\n\tcolor: #aaa;\n\tborder-color: #f2f2f2;\n\tborder-top-width: 0;\n}\n\n/*table end */\n/*blockquote */\n.article-content .blockquote {\n\tmargin: 2.4rem 0;\n}\n\n.article-content blockquote {\n\tdisplay: block;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.article-content blockquote q {\n\tdisplay: block;\n\tposition: relative;\n\tmargin: 0;\n\tpadding: 0;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\tfont-size: 2rem;\n\tline-height: 1.5;\n\tcolor: #262626;\n\tz-index: 5;\n}\n\n@media (max-width: 639px) {\n\t.article-content blockquote q {\n\t\tfont-size: 1.6rem;\n\t\tline-height: 1.7;\n\t}\n}\n\n.article-content blockquote q:before, .article-content blockquote q:after {\n\tcontent: \"\";\n\tdisplay: block;\n\tposition: relative;\n\tbackground-size: contain;\n\twidth: 40px;\n\theight: 35px;\n\tz-index: -1;\n}\n\n.article-content blockquote q:before {\n\tcontent: '';\n\tmargin: 0 0 20px 30%;\n}\n\n@media (max-width: 639px) {\n\t.article-content blockquote q:before {\n\t\tmargin-bottom: 10px;\n\t\tmargin-left: -10px;\n\t}\n}\n\n.article-content blockquote q:after {\n\tcontent: '';\n\tmargin: 20px 30% 0 auto;\n\ttransform: rotate(180deg);\n}\n\n@media (max-width: 639px) {\n\t.article-content blockquote q:after {\n\t\tcontent: none;\n\t\tdisplay: none;\n\t}\n}\n\n.article-content blockquote cite {\n\ttext-align: right;\n\tdisplay: block;\n\tmargin-left: auto;\n\tfont-weight: 400;\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n\tcolor: #262626;\n}\n\n/*blockquote end */\n/*content img */\n.imgc {\n\ttext-align: center;\n\tpadding-bottom: 7.2rem;\n\tclear: both;\n}\n\n.imgl {\n\ttext-align: left;\n\tfloat: left;\n\tmargin: 0.72rem 7.2rem 7.2rem 0;\n\tmax-width: 50%;\n}\n\n.imgr {\n\ttext-align: right;\n\tfloat: right;\n\tmargin: 0.72rem 0 7.2rem 7.2rem;\n\tmax-width: 50%;\n}\n\n@media (max-width: 991px) {\n\t.imgl, .imgr {\n\t\tfloat: none;\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmax-width: none;\n\t}\n}\n\n/*content img end */\n/*view print */\n.view-print {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tpadding: 4px 18px;\n\tbackground: white;\n\tfont-size: 16px;\n\tline-height: 30px;\n\tcolor: #aaa;\n\tborder: 1px solid #aaa;\n\ttext-decoration: none;\n\tmargin-bottom: 2.4rem;\n\ttransition-property: background-color, color;\n\ttransition-duration: 0.2s;\n}\n\n.no-touchevents .view-print:hover {\n\tbackground-color: #aaa;\n\tcolor: white;\n}\n\n.view-print:active {\n\ttransform: scale(0.98);\n}\n\n.view-print svg {\n\twidth: 21px;\n\theight: 21px;\n\tvertical-align: middle;\n\tmargin-right: 10px;\n}\n\n.view-print svg path {\n\tfill: #aaa;\n\ttransition-property: fill;\n\ttransition-duration: 0.2s;\n}\n\n.no-touchevents .view-print:hover path {\n\tfill: white;\n}\n\n.view-print span {\n\tdisplay: inline-block;\n\tvertical-align: middle;\n}\n\n@media (max-width: 991px) {\n\t.view-print {\n\t\tfont-size: 14px;\n\t}\n}\n\n@media (max-width: 639px) {\n\t.view-print svg {\n\t\tmargin-right: 0;\n\t}\n\t.view-print span {\n\t\tdisplay: none;\n\t}\n}\n\n/*view print end*/\n/*video */\n.video-holder {\n\tposition: relative;\n\tpadding-bottom: 62%;\n\tpadding-top: 25px;\n\theight: 0;\n}\n\n.video-holder iframe {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n}\n\n/*video end */\ninput[type=\"radio\"], input[type=\"checkbox\"] {\n\twidth: 15px;\n\theight: 15px;\n}\n\n/* snippet */\n.btn {\n\tposition: relative;\n\tdisplay: inline-block;\n\tpadding: 6px 12px;\n\tfont-size: 13px;\n\tfont-weight: 700;\n\tline-height: 20px;\n\tcolor: #333;\n\twhite-space: nowrap;\n\tvertical-align: middle;\n\tcursor: pointer;\n\tbackground-color: #eee;\n\tbackground-image: linear-gradient(#fcfcfc, #eeeeee);\n\tborder: 1px solid #d5d5d5;\n\tborder-radius: 3px;\n\tuser-select: none;\n\t-webkit-appearance: none;\n}\n\n.btn i {\n\tfont-style: normal;\n\tfont-weight: 500;\n\topacity: 0.6;\n}\n\n.btn .octicon {\n\tvertical-align: text-top;\n}\n\n.btn .counter {\n\ttext-shadow: none;\n\tbackground-color: #e5e5e5;\n}\n\n.btn:focus {\n\ttext-decoration: none;\n\tborder-color: #51a7e8;\n\toutline: 0;\n\tbox-shadow: 0 0 5px rgba(81, 167, 232, 0.5);\n}\n\n.btn:focus:hover, .btn.selected:focus {\n\tborder-color: #51a7e8;\n}\n\n.btn:hover, .btn:active, .btn.zeroclipboard-is-hover, .btn.zeroclipboard-is-active {\n\ttext-decoration: none;\n\tbackground-color: #ddd;\n\tbackground-image: linear-gradient(#eeeeee, #dddddd);\n\tborder-color: #cccccc;\n}\n\n.btn:active, .btn.selected, .btn.zeroclipboard-is-active {\n\tbackground-color: #dcdcdc;\n\tbackground-image: none;\n\tborder-color: #b5b5b5;\n\tbox-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15);\n}\n\n.clippy {\n\tmargin-top: -3px;\n\tposition: relative;\n\ttop: 3px;\n\tvertical-align: baseline;\n}\n\n.btn[disabled] .clippy {\n\topacity: 0.3;\n}\n\n.snippet {\n\tposition: relative;\n\toverflow: visible;\n}\n\n.snippet code {\n\tfont-size: 14px;\n\tline-height: 20px;\n}\n\n.snippet .btn {\n\ttransition: opacity .3s ease-in-out;\n\topacity: 0;\n\tpadding: 2px 6px;\n\tposition: absolute;\n\tright: 4px;\n\ttop: 4px;\n}\n\n.snippet:hover .btn, .snippet .btn:focus {\n\topacity: 1;\n}\n\n@media screen and (max-width: 768px) {\n\t.snippet .btn {\n\t\topacity: 1;\n\t}\n}\n\n.example + .snippet .btn {\n\ttop: 22px;\n\tright: 2px;\n}\n\n/* snippet end */\n/* hljs */\n.hljs {\n\tbackground-color: #f0f0f0;\n}\n\n/* hljs end */\n/* separator */\n.separator {\n\tbackground: url(../../img/icon-separator.svg) no-repeat center;\n}\n\n/* separator end */\n/* article elements */\n.article-content ul, .article-content ol {\n\tmargin: 0 0 2.4rem;\n\tpadding: 0;\n\tlist-style: none;\n\tfont-size: 1.6rem;\n\tline-height: 2.4rem;\n}\n\n.article-content ul li, .article-content ol li {\n\tpadding-left: 1.5rem;\n\tmargin: 0 0 1.2rem;\n\tposition: relative;\n}\n\n.article-content ul > li::before {\n\tcontent: '—';\n\tdisplay: block;\n\tfloat: left;\n\tmargin: 0 0 0 -1.5rem;\n\tcolor: #ee6e73;\n}\n\n.article-content ol {\n\tcounter-reset: section;\n}\n\n.article-content ol > li {\n\tcounter-increment: section;\n\tpadding-left: 1.5rem;\n}\n\n.article-content ol > li::before {\n\tdisplay: block;\n\tfloat: left;\n\tcontent: counter(section) \".\";\n\tmargin: 0 0 0 -1.5rem;\n\tcolor: #ee6e73;\n}\n\n.article-content ul ul, .article-content ul ol, .article-content ol ul, .article-content ol ol {\n\tmargin: 1.2rem 0;\n}\n\n/*======================================================*/\n/* COMMON */\n/*======================================================*/\n","@import \"../libs/include-media/dist/include-media\";\n@import \"utils/variables\";\n@import \"utils/functions\";\n@import \"utils/mixins\";\n@import \"utils/placeholders\";\n\n/*======================================================*/\n/* NORMALIZE AND RESET */\n/*======================================================*/\n@import \"base/reset\";\n\n/*======================================================*/\n/* LAYOUT */\n/*======================================================*/\n@import \"base/layout\";\n\n/*======================================================*/\n/*TYPOGRAPHY*/\n/*======================================================*/\n@import \"base/typography\";\n\n/*======================================================*/\n/* COMMON */\n/*======================================================*/\n//@import components/other\n\n@import \"components/components\";\n","/* reset */\n//a, input, button,\n//a:focus, input:focus, button:focus\ninput, input:focus, textarea, select {\n\t-webkit-tap-highlight-color: rgba(255, 255, 255, 0) !important;\n\t-webkit-focus-ring-color: rgba(255, 255, 255, 0) !important;\n\toutline: none !important; }\n//*:focus\n//utline: none\n//moz-outline: 3px solid white !important\nbody {\n\t-webkit-font-smoothing: antialiased; }\nbody, html {\n\theight: 100%;\n\twidth: 100%; }\nselect[disabled] {\n\tcursor: default; }\nform {\n\tmargin: 0;\n\tpadding: 0; }\ninput {\n\tvertical-align: middle; }\ntextarea, select, input[type=\"text\"], input[type=\"email\"], input[type=\"search\"], input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"], button {\n\t-webkit-appearance: none;\n\tborder-radius: 0; }\ninput[type=radio], input[type=checkbox], select {\n\tcursor: pointer; }\ninput[type=\"radio\"]:focus {\n\t-moz-outline-radius: 12px !important;\n\t-moz-outline-offset: 0 !important; }\ninput[type=\"checkbox\"]:focus {\n\t-moz-outline-offset: -1px !important;\n\t-moz-outline: 1px solid #000 !important; }\ninput::-ms-clear {\n\tdisplay: none; }\nblockquote, q {\n\tquotes: none; }\nblockquote::before, blockquote::after, q::before, q::after {\n\tcontent: none; }\nins {\n\ttext-decoration: none; }\ndel {\n\ttext-decoration: line-through; }\nfieldset {\n\tborder: none;\n\tmargin: 0;\n\tpadding: 0; }\ntable {\n\tborder: 0;\n\twidth: 100%;\n\tpadding: 0;\n\tmargin: 0; }\nul {\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0; }\n*, *::after, *::before {\n\tbox-sizing: border-box; }\n\n/* reset end */\n","@import \"../utils/variables\";\n@import \"../utils/mixins\";\n@import \"../../libs/include-media/dist/include-media\";\n\nbody {\n  padding: 0;\n  margin: 0; }\n\n.main {\n  padding: 30px 0 0;\n  position: relative;\n  clear: both;\n  z-index: 4; }\n\n.user-content {\n  padding: 60px 0; }\n\n.content {\n  margin: 0 0 $bottom-space 0; }\n\n.header {\n  position: relative;\n  z-index: 5;\n\n  background-color: $base-color;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem; }\n\n.footer {\n  margin: 0 auto;\n  position: relative;\n  clear: both;\n  z-index: 5;\n\n  background-color: lightgreen; }\n\n.max-wrap {\n  max-width: $layout-width; }\n\n.layout {\n  @include padding-horizontal($layout-space-horizontal);\n  @include push-auto;\n\n  @include media('<tab') {\n    @include padding-horizontal(0); } }\n\n.max-wrap-text {\n  max-width: $layout-text-width; }\n\n.layout-text {\n  max-width: $layout-text-width;\n  @include padding-horizontal($layout-text-space-horizontal);\n  @include push-auto;\n\n  @include media('<tab') {\n    @include padding-horizontal($layout-text-space-horizontal-md); }\n\n  @include media('<tab-s') {\n    @include padding-horizontal($layout-text-space-horizontal-sm); } }\n\n.max-wrap-flood {\n  max-width: $layout-flood-width; }\n\n.layout-flood {\n  max-width: $layout-flood-width;\n  @include padding-horizontal($layout-flood-space-horizontal);\n  @include push-auto;\n\n  @include media('<tab') {\n    @include padding-horizontal($layout-text-space-horizontal-md); }\n\n  @include media('<tab-s') {\n    @include padding-horizontal($layout-text-space-horizontal-sm); } }\n\n/*LAYOUT end*/\n","@import \"../utils/functions\";\n@import \"../utils/placeholders\";\n\n// Medium query\n// ==========================================================================\n\n$breakpoints: (\"desk\": 1920px, \"desk-s\": 1600px, \"lap-l\": 1440px, \"lap\": 1366px, \"lap-s\": 1280px, \"net\": 1200px, \"tab\": 992px, \"tab-s\": 768px, \"mob\": 640px, \"mob-s\": 480px);\n\n\n// Fonts style\n// ==========================================================================\n\n$font-norm: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif !default;\n$font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !default;\n\n@mixin font-normal() {\n  font-family: $font-norm; }\n\n@mixin font-bold() {\n  font-weight: bold; }\n\n@mixin font-italic() {\n  font-style: italic; }\n\n@mixin font-bold-italic() {\n  font-weight: bold;\n  font-style: italic; }\n\n@mixin font-title() {\n  font-weight: 400; }\n\n@mixin font-alt() {\n  font-weight: 400; }\n\n@mixin font-monospace() {\n  font-family: $font-monospace; }\n\n\n// Base\n// ==========================================================================\n\n$font-size: 1.6rem !default;\n$line-height: 2.4rem !default;\n$letter-spacing: 0.025em !default;\n\n\n// Spaces\n// ==========================================================================\n\n$bottom-space: $line-height !default;\n\n\n// h1, h2, h3, h4, h5, h6\n// ==========================================================================\n\n// Heading h1\n$font-size-h1: 3.6rem !default;\n$line-height-h1: 5.2rem !default;\n$line-height-h1-kef: $line-height-h1 / $font-size-h1;\n// ----------------------------------------------------\n$font-size-h1--tab: 3.4rem !default;\n$line-height-h1--tab: round-float($font-size-h1--tab * $line-height-h1-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n$font-size-h1--mob: 3.0rem !default;\n$line-height-h1--mob: round-float($font-size-h1--mob * $line-height-h1-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n@mixin font-h1() {\n  font-size: $font-size-h1;\n  line-height: $line-height-h1;\n\n  @include media('<net') {\n    font-size: $font-size-h1--tab;\n    line-height: $line-height-h1--tab; }\n\n  @include media('<tab-s') {\n    font-size: $font-size-h1--mob;\n    line-height: $line-height-h1--mob; } }\n\n// Heading h2\n$font-size-h2: 3.0rem !default;\n$line-height-h2: 4.2rem !default;\n$line-height-h2-kef: $line-height-h2 / $font-size-h2;\n// ----------------------------------------------------\n$font-size-h2--tab: 2.8rem !default;\n$line-height-h2--tab: round-float($font-size-h2--tab * $line-height-h2-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n$font-size-h2--mob: 2.4rem !default;\n$line-height-h2--mob: round-float($font-size-h2--mob * $line-height-h2-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n@mixin font-h2() {\n  font-size: $font-size-h2;\n  line-height: $line-height-h2;\n\n  @include media('<net') {\n    font-size: $font-size-h2--tab;\n    line-height: $line-height-h2--tab; }\n\n  @include media('<tab-s') {\n    font-size: $font-size-h2--mob;\n    line-height: $line-height-h2--mob; } }\n\n// Heading h3\n$font-size-h3: 2.4rem !default;\n$line-height-h3: 3.0rem !default;\n$line-height-h3-kef: $line-height-h3 / $font-size-h3;\n// ----------------------------------------------------\n$font-size-h3--tab: 2.2rem !default;\n$line-height-h3--tab: round-float($font-size-h3--tab * $line-height-h3-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n$font-size-h3--mob: 1.8rem !default;\n$line-height-h3--mob: round-float($font-size-h3--mob * $line-height-h3-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\n// ----------------------------------------------------\n@mixin font-h3() {\n  font-size: $font-size-h3;\n  line-height: $line-height-h3;\n\n  @include media('<net') {\n    font-size: $font-size-h3--tab;\n    line-height: $line-height-h3--tab; }\n\n  @include media('<tab-s') {\n    font-size: $font-size-h3--mob;\n    line-height: $line-height-h3--mob; } }\n\n// Heading h4\n$font-size-h4: $font-size !default;\n$line-height-h4: $line-height !default;\n\n// Heading h5\n$font-size-h5: $font-size !default;\n$line-height-h5: $line-height !default;\n\n// Heading h6\n$font-size-h6: $font-size !default;\n$line-height-h6: $line-height !default;\n\n\n// Colors\n// ==========================================================================\n\n// ----------------------------------------------------\n$base-color: #ee6e73 !default;\n$base-color-alt: #6c757d !default;\n// ----------------------------------------------------\n$bg-color: #fff !default;\n$bg-color-alt: #f2f2f2 !default;\n$bg-color-light: #f7f7f7 !default;\n// ----------------------------------------------------\n$text-color: #262626 !default;\n$text-color-light: #aaa !default;\n$title-color: #ee6e73 !default;\n// ----------------------------------------------------\n$link-color: blue !default;\n$focus-color: #0080ff !default;\n// ----------------------------------------------------\n$border-color: #aaa !default;\n$mark-color: #ff0b4f !default;\n// ----------------------------------------------------\n$success-color: #28a745 !default;\n$error-color: #dc3545 !default;\n$info-color: #17a2b8 !default;\n$warning-color: #ffc107 !default;\n$light-color: #f8f9fa !default;\n$dark-color: #343a40 !default;\n\n\n// Layout\n// ==========================================================================\n\n// отступы слева и справа для всего сайта\n$layout-space-horizontal: 20px !default;\n// максимальная ширина сайта\n$layout-width: 1920px + $layout-space-horizontal*2 !default;\n// минимальные отступы слева и справа у текствого блока\n$layout-text-space-horizontal: 40px !default;\n$layout-text-space-horizontal-md: 30px !default;\n$layout-text-space-horizontal-sm: 15px !default;\n// максимальная ширина текстового блока\n$layout-text-width: 640px + $layout-text-space-horizontal*2 !default;\n// минимальные отступы слева и справа у блокоа выходящего за пределы текста\n$layout-flood-space-horizontal: 40px !default;\n// максимальная ширина текстового блока выходящего за пределы текста\n$layout-flood-width: 960px + $layout-text-space-horizontal*2 !default;\n// отступы внутри блочных элементов\n$grid-space: 30px !default;\n$grid-space--md: 20px !default;\n$grid-space--sm: 10px !default;\n\n\n// Article content class\n// ==========================================================================\n\n$article-content: article-content !default;\n\n\n// Animation\n// ==========================================================================\n$animation-speed: 0.2s !default;\n$animation-speed-mouseleave: 0.35s !default;\n","@import \"variables\";\n@import \"functions\";\n\n@import \"../../libs/mathsass/dist/math\";\n@import \"../../libs/mathsass/dist/functions/tan\";\n\n////\n/// @author Astronim* Serhiy Ilchenko\n/// @access public\n///\n\n// =============================================================================\n// size\n// =============================================================================\n/// Примесь позволяет определять `width` и `height` одновременно.\n///\n/// @param {Length} $width - `width` элемента\n/// @param {Length} $height ($width) - `height` элемента\n///\n/// @example Sass - Использование\n/// .foo\n///   +size(10em)\n///\n/// .bar\n///   +size(100%, 10em)\n///\n/// @example css - Вывод CSS\n/// .foo {\n///   width: 10em;\n///   height: 10em;\n/// }\n///\n/// .bar {\n///   width: 100%;\n///   height: 10em;\n/// }\n\n@mixin size($width, $height: $width) {\n\twidth: $width;\n\theight: $height; }\n\n// =============================================================================\n// Position\n// =============================================================================\n/// Примесь устанавливает верхнюю и левую координаты\n///\n/// @param {Length} $t [0] - верхняя координата\n/// @param {Length} $l [0] - левая координата\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin position($t: 0, $l: $t) {\n\ttop: $t;\n\tleft: $l; }\n\n// =============================================================================\n// font\n// =============================================================================\n/// Примесь добавляет одновремменно `font-size` и `line-height`\n/// Используются переменный `$font-size` и `$line-height`\n///\n/// @param {Length} $width - `width` элемента\n/// @param {Length} $height ($width) - `height` элемента\n///\n/// @example Sass - Использование\n/// .foo\n///   +font(1.4rem, 1.5)\n///\n/// @example css - Вывод CSS\n/// .foo {\n///   font-size: 1.4rem;\n///   line-height: 1.5;\n/// }\n\n@mixin font($font-size: inherit, $line-height: inherit) {\n\tfont-size: $font-size;\n\tline-height: $line-height; }\n\n// =============================================================================\n// display inline block + vertical align\n// =============================================================================\n/// Примесь задает пару свойст display: inline-block и vertical-align для\n/// выравнивания инлайн-блок элементов по вертикали\n@mixin display-inline-block-top() {\n\tdisplay: inline-block;\n\tvertical-align: top; }\n\n@mixin display-inline-block-middle() {\n\tdisplay: inline-block;\n\tvertical-align: middle; }\n\n@mixin display-inline-block-bottom() {\n\tdisplay: inline-block;\n\tvertical-align: baseline; }\n\n// =============================================================================\n// pseudo\n// =============================================================================\n/// Примесь добавляет к псевдоэлементу базовые свойства.\n///\n/// @param {String} $content [''] - контент псевдоэлемента\n/// @param {String} $display [block] - тип псевдоэлемента\n/// @param {String} $pos [absolute] - позицирование псевдоэлемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   &::before\n///     +pseudo()\n///\n/// .foo\n///   &::before\n///     +pseudo(attr(data), inline-block, relative)\n///\n/// @example css - Вывод CSS\n///\n/// .foo::before {\n///   content: '';\n///   display: block;\n///   position: absolute;\n/// }\n///\n/// .foo::before {\n///   content: attr(data);\n///   display: inline-block;\n///   position: relative;\n/// }\n\n@mixin pseudo($content: '', $display: block, $pos: absolute) {\n\tcontent: $content;\n\tdisplay: $display;\n\tposition: $pos; }\n\n@mixin pseudo-block-relative($content: '') {\n\t@include pseudo($content: $content, $display: block, $pos: relative); }\n\n@mixin pseudo-relative($content: '') {\n\t@include pseudo($content: $content, $display: null, $pos: relative); }\n\n@mixin pseudo-inline-block($content: '') {\n\t@include pseudo($content: $content, $display: inline-block, $pos: null); }\n\n@mixin pseudo-inline-block-relative($content: '') {\n\t@include pseudo($content: $content, $display: inline-block, $pos: relative); }\n\n@mixin pseudo-content($content: '') {\n\t@include pseudo($content: $content, $display: null, $pos: null); }\n\n// =============================================================================\n// antialiased\n// =============================================================================\n/// Нормализует отображение текста, если к нему применяется анимированная трансформация\n///\n/// @param {} hasn't params\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin antialiased() {\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-khtml-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none; }\n\n// =============================================================================\n// clear\n// =============================================================================\n/// Помощник для сброса внутреннего обтекания\n/// @author Николас Галлагер\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix\n\n@mixin clear() {\n\t&::after {\n\t\tcontent: '';\n\t\tdisplay: table;\n\t\tclear: both; } }\n\n// =============================================================================\n// truncate\n// =============================================================================\n/// Обрезает текст и добавляет троеточие\n///\n/// @param {Length} $max-width [320px] - максиальная ширина элемента\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin truncate($max-width: 320px) {\n\tmax-width: $max-width;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden; }\n\n// =============================================================================\n// margin-horizontal / margin-vertical / padding-horizontal / padding-vertical\n// =============================================================================\n/// Примеси добавляют горизонтальные/вертикальные внешние/внутренние отстпупы (`margin/padding`)\n/// в развернутом виде.\n///\n/// @param {Length} $left [null] - левый `margin/padding` элемента\n/// @param {Length} $right [$left] - правый `margin/padding` элемента\n/// @param {Length} $top [null] - верхний `margin/padding` элемента\n/// @param {Length} $bottom [$top] - нижний `margin/padding` элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +margin-horizontal(20px)\n///\n/// .foo\n///   +margin-horizontal(20px, 10px)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-left: 20px;\n///   margin-right: 20px;\n/// }\n///\n/// .foo {\n///   margin-left: 20px;\n///   margin-right: 10px;\n/// }\n\n@mixin margin-horizontal($left, $right: $left) {\n\tmargin: {\n\t\tright: $right;\n\t\tleft: $left; } }\n\n@mixin margin-vertical($top, $bottom:$top) {\n\tmargin: {\n\t\ttop: $top;\n\t\tbottom: $bottom; } }\n\n@mixin padding-horizontal($left, $right: $left) {\n\tpadding: {\n\t\tright: $right;\n\t\tleft: $left; } }\n\n@mixin padding-vertical($top, $bottom:$top) {\n\tpadding: {\n\t\ttop: $top;\n\t\tbottom: $bottom; } }\n\n// =============================================================================\n// margin / padding\n// =============================================================================\n/// Примеси добавляют внешние/внутренние отстпупы (`margin/padding`) в развернутом виде.\n/// Значения можно добавлять поочередно: верхний, правый, нижний, левый.\n/// Пропустить значение можно задав ему null.\n/// Значения также можно добавлять через ключ: $t, $r, $b, $l, - соответственно.\n/// Если заданно четыре значения не равных null, то `margin` будет в сокращенном виде.\n///\n/// @param {Length} $t [null] - верхний `margin/padding` элемента\n/// @param {Length} $r [null] - правый `margin/padding` элемента\n/// @param {Length} $b [null] - нижний `margin/padding` элемента\n/// @param {Length} $l [null] - левый `margin/padding` элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +margin(10px, null, 30px, 40px)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-top: 10px;\n///   margin-bottom: 30px;\n///   margin-left: 40px;\n/// }\n\n@mixin margin($top: null, $right: null, $bottom: null, $left: null) {\n\t@if($top and $right and $bottom and $left) {\n\t\tmargin: $top $right $bottom $left; }\n\n\t@else {\n\t\tmargin: {\n\t\t\t@if $top {\n\t\t\t\ttop: $top; }\n\t\t\t@if $right {\n\t\t\t\tright: $right; }\n\t\t\t@if $bottom {\n\t\t\t\tbottom: $bottom; }\n\t\t\t@if $left {\n\t\t\t\tleft: $left; } } } }\n\n@mixin padding($top: null, $right: null, $bottom: null, $left: null) {\n\t@if($top and $right and $bottom and $left) {\n\t\tpadding: $top $right $bottom $left; }\n\n\t@else {\n\t\tpadding: {\n\t\t\t@if $top {\n\t\t\t\ttop: $top; }\n\t\t\t@if $right {\n\t\t\t\tright: $right; }\n\t\t\t@if $bottom {\n\t\t\t\tbottom: $bottom; }\n\t\t\t@if $left {\n\t\t\t\tleft: $left; } } } }\n\n/// Примесь центрирует блочный элемент с ограниченной шириной.\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +push-auto\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-left: auto;\n///   margin-right: auto;\n/// }\n\n@mixin push-auto() {\n\t@include margin-horizontal(auto); }\n\n/// Примесь позволяет сохранять пропорции элементов при респонсиве\n///\n/// @param {Number} $x [1] - ширина в пропорциональном соотношении\n/// @param {Number} $y [1] - высота в пропорциональном соотношении\n/// @param {Boolean} $pseudo [false] - указывает добавлять псевдоэлемент или\n/// использовать `padding` самого элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +responsive-ratio(1)\n///\n/// .foo\n///   +responsive-ratio(16, 9)\n///\n/// .foo\n///   +responsive-ratio(4, 3, true)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   padding-top: 100%\n/// }\n///\n/// .foo {\n///   padding-top: 56.25%\n/// }\n///\n/// .foo::before {\n///   content: \"\";\n///   display: block;\n///   position: relative;\n///   height: 0;\n///   width: 100%;\n///   padding-top: 75%;\n/// }\n\n@mixin ratio($x: 1, $y: 1, $pseudo: false) {\n\t$padding: round-float($y / $x * 100%, 2);\n\n\t@if $pseudo {\n\t\t&::before {\n\t\t\t@include pseudo($pos: relative);\n\n\t\t\theight: 0;\n\t\t\tpadding-top: $padding; } }\n\n\t@else {\n\t\theight: 0;\n\t\tpadding-top: $padding; } }\n\n// =============================================================================\n// Сentering\n// =============================================================================\n/// Примесь центрирует элемент относительно родителя\n///\n/// @param {Boolean} $transform [true] - направление выравнивания\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n@mixin centering($width: null, $height: null, $transform: true, $pos: absolute) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\n\t@if $transform {\n\t\ttransform: translate(-50%, -50%); }\n\n\t@else {\n\t\twidth: $width;\n\t\theight: $height;\n\t\t@include margin($top: round(-$height*0.5), $left: round(-$width*0.5)); } }\n\n/// 1.1 С помощью \"transform: translate\" без позициирования:\n@mixin centering-transform($pos: null) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%); }\n\n/// 1.2 С помощью \"transform: translate\" + \"position: absolute\":\n@mixin centering-transform-abs() {\n\t@include centering-transform($pos: absolute); }\n\n/// 1.3 С помощью \"transform: translate\" + \"position: relative\":\n@mixin centering-transform-rel() {\n\t@include centering-transform($pos: relative); }\n\n/// 2. С помощью margin:\n@mixin centering-margin($width: null, $height: null, $pos: null) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\t@include margin($top: round(-$height*0.5), $left: round(-$width*0.5)); }\n\n// =============================================================================\n// Reset for inline-block elements\n// =============================================================================\n/// обнуляет горизонтальные отступы между `inline-block` елементами\n@mixin clear-spacing() {\n\tfont-size: 0;\n\tletter-spacing: -4px; }\n\n// =============================================================================\n// Grid Item\n// =============================================================================\n/// Формирует упрощенную сетку элементов с применением `display: inline-block`, или `float: left`;\n/// Для родителя наобходимо подключить `+grid-parent`;\n/// В случае с `inline-block` обнулить `font:size` и `letter-spacing` (примесь `+clear-spacing`)\n/// На оберту родителя при необходимости задать `overflow: hidden`;\n/// Для дочерних элементов необходимо подключить `+grid-item` или `+grid-item-float`;\n///\n/// @param {Length} $horizontal-space [20px] - горизонтальные отступы между элементами\n/// @param {Length} $length-in-row [2] - количество элементов в ряду\n/// @param {Length} $bottom-space [$horizontal-space] - нижние отступы элементов\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin grid-parent($horizontal-space: 20px) {\n\tmargin: {\n\t\t@if $horizontal-space == 0 {\n\t\t\tleft: 0;\n\t\t\tright: 0; }\n\t\t@else {\n\t\t\tleft: -#{round($horizontal-space/2)};\n\t\t\tright: -#{round($horizontal-space/2)}; } } }\n\n@mixin grid-item($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; } }\n\n/// использовать если нужно только поменять количество колонок\n@mixin grid-item-responsive($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; } }\n\n@mixin grid-item-float($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\tfloat: left;\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space;\n\t\tclear: none; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; }\n\n\t&:nth-child(#{$length-in-row}n+1) {\n\t\tclear: left; } }\n\n/// использовать если нужно только поменять количество колонок\n@mixin grid-item-float-responsive($length-in-row: 1, $horizontal-space: 0, $bottom-space: $horizontal-space) {\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space;\n\t\tclear: none; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; }\n\n\t&:nth-child(#{$length-in-row}n+1) {\n\t\tclear: left; } }\n\n// =============================================================================\n// Fill parent with absolute or relative position or without position\n// =============================================================================\n/// Примесь задает блочному элемунту размеры родителя\n///\n/// @param {} no param\n///\n/// @example Sass - Использование\n///\n/// img.foo\n///   +cover\n///\n/// img.foo\n///   +cover-rel()\n///\n/// @example css - Вывод CSS\n///\n/// img.foo {\n///   left: 0;\n///   top: 0;\n///   width: 100%;\n///   height: 100%;\n/// }\n///\n/// img.foo {\n///   position: relative\n///   left: 0;\n///   top: 0;\n///   width: 100%;\n///   height: 100%;\n/// }\n\n@mixin cover($position: null) {\n\t@if $position {\n\t\tposition: $position; }\n\t@include position(0, 0);\n\t@include size(100%); }\n\n@mixin cover-abs() {\n\t@include cover($position: absolute); }\n\n@mixin cover-rel() {\n\t@include cover($position: relative); }\n\n/// Примесь позволяет указывает изображению способ заполнения блока,\n/// в котором находится\n/// Для ie9 необходимо подключить скрипт и прописать дополнительные свойства\n/// @link https://medium.com/@primozcigler/neat-trick-for-css-object-fit-fallback-on-edge-and-other-browsers-afbc53bbb2c3#.e3eu6mvxl\n///\n/// @param {String} $fit [cover] - метод заполнения\n/// @param {String} $pos [relative] - тип позиционирования\n///\n/// @example Sass - Использование\n///\n/// img.foo\n///   +object-fit-position\n///\n/// @example css - Вывод CSS\n///\n/// img.foo {\n///   position: relative\n///   top: 50%\n///   left: 50%\n///   max-width: none\n///   width: auto\n///   min-width: 100%\n///   min-height: 100%\n///   transform: translate(-50%, -50%)\n///   object-fit: cover\n/// }\n\n@mixin object-fit-position($fit: cover, $pos: relative) {\n\tposition: $pos;\n\ttop: 50%;\n\tleft: 50%;\n\tmin-width: 0;\n\tmin-height: 0;\n\tmax-width: none;\n\tmax-height: none;\n\theight: 100%;\n\twidth: 100%;\n\ttransform: translate(-50%, -50%);\n\tbackface-visibility: hidden;\n\tobject-fit: $fit; }\n\n/// This mixin can be used to set the object-fit:\n/// +object-fit(contain)\n///\n/// or object-fit and object-position:\n/// +object-fit(cover, top)\n\n/// need to add this rules\n/// display: block\n/// width: 100%\n/// height: 100%\n/// max-width: none\n\n@mixin object-fit($fit: fill, $position: null) {\n\t//-o-object-fit: $fit\n\tobject-fit: $fit;\n\t@if $position {\n\t\t//-o-object-position: $position\n\t\tobject-position: $position;\n\t\tfont-family: 'object-fit: #{$fit}; object-position: #{$position}'; }\n\t@else {\n\t\tfont-family: 'object-fit: #{$fit}'; } }\n\n// =============================================================================\n// Hide text for screen reader\n// =============================================================================\n/// Примесь скрывает текст, который остается видимым для генераторов речи\n\n@mixin hide-text() {\n\tborder: 0;\n\tclip: rect(0 0 0 0);\n\theight: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute;\n\twidth: 1px;\n\n\t&:active, &:focus {\n\t\tclip: auto;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\toverflow: visible;\n\t\tposition: static;\n\t\twidth: auto; } }\n\n// =============================================================================\n// Input placeholder\n// =============================================================================\n/// @param {} - нет параметров\n///\n/// @example Sass - Использование\n/// .foo\n/// \t+placeholder\n/// \t\tcolor: green\n///\n/// +placeholder\n/// \tcolor: red\n///\n/// @example css - Вывод CSS\n/// .foo::-webkit-input-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo:-moz-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo::-moz-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo:-ms-input-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo.placeholder {\n/// \tcolor: green;\n/// }\n///\n/// ::-webkit-input-placeholder {\n/// \tcolor: red;\n/// }\n/// :-moz-placeholder {\n/// \t\tcolor: red;\n/// }\n/// ::-moz-placeholder {\n/// \tcolor: red;\n/// }\n/// :-ms-input-placeholder {\n/// \t\tcolor: red;\n/// }\n/// .placeholder {\n/// \t\tcolor: red;\n/// }\n\n@mixin optional-at-root($sel) {\n\t@at-root {\n\t\t#{if(not &, $sel, selector-append(&, $sel))} {\n\t\t\t@content; } } }\n\n@mixin placeholder() {\n\t@include optional-at-root('::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('::-moz-placeholder') {\n\t\topacity: 1;\n\t\t@content; }\n\n\t@include optional-at-root(':-ms-input-placeholder') {\n\t\topacity: 1;\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder') {\n\t\t@content; } }\n\n@mixin placeholder-focus() {\n\t@include optional-at-root(':focus::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:focus') {\n\t\t@content; } }\n\n@mixin placeholder-hover() {\n\t@include optional-at-root(':hover::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:hover') {\n\t\t@content; } }\n\n@mixin placeholder-active() {\n\t@include optional-at-root(':active::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:active') {\n\t\t@content; } }\n\n// =============================================================================\n// Scroll lock\n// =============================================================================\n/// Примесь блокирования прокрутки страницы.\n///\n/// @param hasn't params\n\n@mixin scroll-blocked() {\n\twidth: 100% !important;\n\theight: 100% !important;\n\tmax-width: 100% !important;\n\tmax-height: 100% !important;\n\tmargin: 0 !important;\n\tpadding: 0 !important;\n\toverflow: hidden !important; }\n\n// =============================================================================\n// Triangle helper mixin\n// =============================================================================\n/// Примесь созадает простую стрелку-треугольник\n/// Применяется к псевдоэлементу\n/// Triangle helper mixin\n/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`\n/// @param {Color} $color [currentcolor] - Triangle color\n/// @param {Length} $size [1em] - Triangle size\n/// @param {Number} $kef [1em] - Higher-to-base ratio\n///\n/// @example Sass - Использование\n///\n/// .foo::before\n/// \t+triangle(bottom)\n/// \tposition: absolute\n/// \tleft: 50%\n/// \tbottom: 100%\n///\n/// @example css - Вывод CSS\n///\n/// .foo::before {\n/// \twidth: 0;\n/// \theight: 0;\n/// \tcontent: '';\n/// \tz-index: 2;\n/// \tborder-top: 1.5em solid tomato;\n/// \tborder-left: 1em solid transparent;\n/// \tborder-right: 1em solid transparent;\n/// \tposition: absolute;\n/// \tleft: 50%;\n/// \tbottom: 100%;\n/// }\n@mixin triangle($direction, $color: tomato, $size: 1em, $kef: 1.5) {\n\t@if not index(top right bottom left, $direction) {\n\t\t@error \"Direction must be either `top`, `right`, `bottom` or `left`.\"; }\n\n\t//+pseudo()\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-#{opposite-direction($direction)}: (round($size * $kef)) solid $color;\n\n\t$perpendicular-borders: $size solid transparent;\n\n\t@if $direction == top or $direction == bottom {\n\t\tborder-left: $perpendicular-borders;\n\t\tborder-right: $perpendicular-borders; }\n\t@else if $direction == right or $direction == left {\n\t\tborder-bottom: $perpendicular-borders;\n\t\tborder-top: $perpendicular-borders; } }\n\n// =============================================================================\n// triangle pretty\n// =============================================================================\n/// Примесь формирует стрелку-треугольник с бордером\n/// Применяется к самому элементу, а стрелка-треугольник формируется из псевдоэлементов ::before, ::after\n/// Необходимо подключить плагин mathsass https://www.npmjs.com/package/mathsass\n/// Примесь требует доработки! Действует с ограничениями!\n/// Для правильной работи необходимо строго придерживаться правил добавления параметров\n///\n/// @param {Direction} $direction - Направление стрелки-треугольника: `top`, `right`, `bottom` or `left`\n/// @param {Map} $origins-map [] - Расположение стрелки-треугольника относительно родительского элемента\n///                                Например: (top: 50%, left: 100%) - по правому краю по центру\n///                                Задавать значения необходимо придерживая двух правил:\n///                                1) по первому из значений стрелка-треугольник будет смещена\n///                                   в противоположную сторону на половину ширины основания;\n///                                2) значений должно быть не больше двух, что логично.\n///                                Если нужно разместить стрелку внизу по центру, то значения должны быть такими:\n///                                (right: 50%, bottom: 0) либо (left: 50%, bottom: 0)\n/// @param {Color} $color [brown] - Цвет стрелки-треугольника\n/// @param {Length} $size-towards [30px] - Высота стрелки-треугольника с учетом бордера\n///                                      (от основания до вершины указвающей направление)\n/// @param {Length} $size-across [$size-towards] - Ширина стрелки-треугольника с учетом бордера\n///                                               (ширина основания противоположного вершине указвающей направление)\n/// @param {Color} $bd-color [tomato] - Цвет бордера стрелки-треугольника\n/// @param {Length} $bd-width [2px] - Цвет бордера стрелки-треугольника\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +triangle-pretty(bottom, (right: 50%, top: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px)\n///\n/// @example css - Вывод CSS\n///\n// .foo::before,\n// .foo::after{\n//   content: \"\";\n//   display: block;\n//   position: absolute;\n//   top: 100%;\n//   right: 50%;\n//   pointer-events: none;\n// }\n// .foo::before{\n//   z-index: 2;\n//   margin-right: -15px;\n//   border-top: 30px solid darkslategray;\n//   border-left: 15px solid transparent;\n//   border-right: 15px solid transparent;\n// }\n// .foo::after{\n//   z-index: 3;\n//   margin-right: -12px;\n//   border-top: 23px solid darkolivegreen;\n//   border-left: 12px solid transparent;\n//   border-right: 12px solid transparent;\n// }\n\n@mixin triangle-pretty($direction, $origins-map: (), $color: brown, $size-towards: 30px, $size-across: $size-towards, $bd-color: tomato, $bd-width: 2px) {\n\t@if not index(top right bottom left, $direction) {\n\t\t@error \"Direction must be either `top`, `right`, `bottom` or `left`.\"; }\n\n\t$unit-size-toward: unit($size-towards);\n\t$unit-size-across: unit($size-across);\n\n\t@if $unit-size-across != $unit-size-across {\n\t\t@error \"Значение высоты треугольника и его основания должны быть в одинаковых единицах измерения\"; }\n\n\t// переменные для смещения стрелки-треугольника назад на половину ширины основания\n\t$top: null;\n\t$right: null;\n\t$bottom: null;\n\t$left: null;\n\t$margin-direct: null;\n\t$i: 0;\n\n\t// определение направления и величины смещения\n\t@each $origin, $value in $origins-map {\n\t\t@if $i == 0 {\n\t\t\t$margin-direct: $origin; }\n\t\t//@debug $margin-direct\n\n\t\t$i: $i + 1;\n\n\t\t@if $origin == top {\n\t\t\t$top: $value; }\n\t\t//@debug 'top: ' + $value\n\t\t@if $origin == right {\n\t\t\t$right: $value; }\n\t\t//@debug 'right: ' + $value\n\t\t@if $origin == bottom {\n\t\t\t$bottom: $value; }\n\t\t//@debug 'bottom: ' + $value\n\t\t@if $origin == left {\n\t\t\t$left: $value; } }\n\t//@debug 'left: ' + $value\n\n\t// вывод общих стилей\n\t&::before, &::after {\n\t\t@include pseudo();\n\t\ttop: $top;\n\t\tright: $right;\n\t\tbottom: $bottom;\n\t\tleft: $left;\n\t\tpointer-events: none; }\n\n\t// вывод стилей большой (внешней) стрелки-треугольника\n\t&::before {\n\t\tz-index: 2;\n\t\t@if $margin-direct {\n\t\t\tmargin-#{$margin-direct}: -#{$size-across*0.5}; }\n\t\tborder-#{opposite-direction($direction)}: $size-towards solid $bd-color;\n\n\t\t$perpendicular-borders: (round($size-across * 0.5)) solid transparent;\n\n\t\t@if $direction == top or $direction == bottom {\n\t\t\tborder-left: $perpendicular-borders;\n\t\t\tborder-right: $perpendicular-borders; }\n\t\t@else if $direction == right or $direction == left {\n\t\t\tborder-bottom: $perpendicular-borders;\n\t\t\tborder-top: $perpendicular-borders; } }\n\n\t// рассчет маленькой стрелки-треугольника по размеру бордера\n\t$tg-angle: (2*$size-towards/$size-across);\n\t$angle: atan($tg-angle);\n\t$sin-angle: sin($angle);\n\t$height-large: $size-across*$sin-angle;\n\t$height-small: $height-large - $bd-width*2;\n\t$small-size-across: $height-small/$sin-angle;\n\t$small-size-toward: $small-size-across/2*$tg-angle;\n\n\t// вывод стилей маленькой (внутренней) стрелки-треугольника\n\t&::after {\n\t\tz-index: 3;\n\t\t@if $margin-direct {\n\t\t\tmargin-#{$margin-direct}: -(round($small-size-across*0.5)); }\n\t\tborder-#{opposite-direction($direction)}: round($small-size-toward) solid $color;\n\n\t\t$perpendicular-borders: (round($small-size-across * 0.5)) solid transparent;\n\n\t\t@if $direction == top or $direction == bottom {\n\t\t\tborder-left: $perpendicular-borders;\n\t\t\tborder-right: $perpendicular-borders; }\n\t\t@else if $direction == right or $direction == left {\n\t\t\tborder-bottom: $perpendicular-borders;\n\t\t\tborder-top: $perpendicular-borders; } } }\n\n// =============================================================================\n// Leaner gradient -vendor\n// =============================================================================\n/// Convert angle\n/// @author Chris Eppstein\n/// @param {Number} $value - Value to convert\n/// @param {String} $unit - Unit to convert to\n/// @return {Number} Converted angle\n///\n@function convert-angle($value, $unit) {\n\t$convertable-units: deg grad turn rad;\n\t$conversion-factors: 1 (10grad / 9deg) (1turn / 360deg) (3.14159rad / 180deg);\n\n\t@if index($convertable-units, unit($value)) and index($convertable-units, $unit) {\n\t\t@return $value / nth($conversion-factors, index($convertable-units, unit($value))) * nth($conversion-factors, index($convertable-units, $unit)); }\n\n\t@warn \"Cannot convert `#{unit($value)}` to `#{$unit}`.\"; }\n\n/// Test if `$value` is an angle\n/// @param {*} $value - Value to test\n/// @return {Bool}\n///\n@function is-direction($value) {\n\t$is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\n\t$is-angle: type-of($value) == \"number\" and index(\"deg\" \"grad\" \"turn\" \"rad\", unit($value));\n\n\t@return $is-direction or $is-angle; }\n\n/// Convert a direction to legacy syntax\n/// @param {Keyword | Angle} $value - Value to convert\n/// @require {function} is-direction\n/// @require {function} convert-angle\n///\n@function legacy-direction($value) {\n\t@if is-direction($value) == false {\n\t\t@warn \"Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction\"; }\n\n\t$conversion-map: (to top: bottom, to top right: bottom left, to right top: left bottom, to right: left, to bottom right: top left, to right bottom: left top, to bottom: top, to bottom left: top right, to left bottom: right top, to left: right, to left top: right bottom, to top left: bottom right);\n\n\t@if map-has-key($conversion-map, $value) {\n\t\t@return map-get($conversion-map, $value); }\n\n\t@return 90deg - convert-angle($value, \"deg\"); }\n\n/// Mixin printing a linear-gradient\n/// as well as a plain color fallback\n/// and the `-webkit-` prefixed declaration\n/// @param {String | List | Angle} $direction - Linear gradient direction\n/// @param {Arglist} $color-stops - List of color-stops composing the gradient\n///\n@mixin linear-gradient($direction, $color-stops...) {\n\t@if is-direction($direction) == false {\n\t\t$color-stops: $direction, $color-stops;\n\t\t$direction: 180deg; }\n\n\tbackground: nth(nth($color-stops, 1), 1);\n\tbackground: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\n\tbackground: linear-gradient($direction, $color-stops); }\n\n// Tests\n//.test-1\n//\t+linear-gradient(#31B7D7, #EDAC7D)\n//\n//.test-2\n//\t+linear-gradient(to right, #E47D7D 0%, #C195D3 50%, #4FB4E8 100%)\n//\n//.test-3\n//\t+linear-gradient(42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%)\n\n\n// =============================================================================\n// Font Face Generator\n// =============================================================================\n/// Примесь генерирует подключение @font-face шрифтов\n///\n/// @author []\n///\n/// @param {String} $name [] - название шрифта\n/// @param {String} $path [] - путь к шрифту включая файл без расширения\n/// @param {String} $weight [null] - значение `font-weight`\n/// @param {String} $style [null] - значение `font-style`\n/// @param {Map} $exts [eot woff2 woff ttf svg] - мапа расширений шрифта\n///\n/// @example Sass - Использование\n///\n/// +font-face(\"candara\", \"../fonts/candara/regular/candara\", normal, normal, eot woff ttf svg)\n///\n/// @example css - Вывод CSS\n///\n/// @font-face{\n///   font-family: \"название-шрифта\";\n///   font-style: normal;\n///   font-weight: normal;\n///   src: url(\"../fonts/candara/regular/candara.eot?\") format(\"eot\"), url(\"../fonts/candara/regular/candara.woff\") format(\"woff\"), url(\"../fonts/candara/regular/candara.ttf\") format(\"truetype\"), url(\"../fonts/candara/regular/candara.svg#candara-regular\") format(\"svg\");\n/// }\n\n@function str-replace($string, $search, $replace: \"\") {\n\t$index: str-index($string, $search);\n\n\t@if $index {\n\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n\n\t@return $string; }\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n\t$src: null;\n\n\t$extmods: (eot: \"?\", svg: \"#\" + str-replace($name, \" \", \"_\"));\n\n\t$formats: (otf: \"opentype\", ttf: \"truetype\");\n\n\t@each $ext in $exts {\n\t\t$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n\t\t$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n\t\t$src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma); }\n\n\t@font-face {\n\t\tfont-family: quote($name);\n\t\tfont-style: $style;\n\t\tfont-weight: $weight;\n\t\tsrc: $src; } }\n\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТЕКУЩЕМ ПРОЕКТЕ\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n@mixin font-d($font-size: 14px, $line-height: round-float(20/14, 2)) {\n\t@include font-bold;\n\t@include font($font-size, $line-height);\n\tletter-spacing: 0.2em;\n\ttext-transform: uppercase; }\n\n// =============================================================================\n// gradient per value\n// =============================================================================\n/// создает набор css-селекторов с переходом цвета от одного к другому\n@mixin grad-per-value($color: white black, $val: 1 100) {\n\t$i: 0;\n\n\t@for $item from nth($val, 1) through nth($val, 2) {\n\n\t\t$percentage: $item*1%;\n\t\t$perVal: 100/(nth($val, 2) - nth($val, 1))*$i*1%;\n\n\t\t&[style*=\"#{$percentage}\"] {\n\t\t\tbackground-color: mix(nth($color, 2), nth($color, 1), $perVal); }\n\n\t\t$i: $i + 1; } }\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТЕКУЩЕМ ПРОЕКТЕ конец\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n@mixin print-reset() {\n\tdisplay: block !important;\n\tfloat: none !important;\n\tposition: relative !important;\n\toverflow: visible !important;\n\theight: auto !important;\n\tmin-height: 0 !important;\n\tmax-height: none !important;\n\twidth: auto !important;\n\tmin-width: 0 !important;\n\tmax-width: none !important;\n\tleft: auto !important;\n\ttop: auto !important;\n\tright: auto !important;\n\tbottom: auto !important;\n\tpadding: 0 !important;\n\tmargin: 0 !important;\n\ttransform: none !important;\n\ttext-align: left !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\topacity: 1 !important;\n\tvisibility: visible !important;\n\tz-index: auto !important; }\n\n@mixin prints-space-bottom-sm() {\n\tmargin-top: 0 !important;\n\tmargin-bottom: 0.5cm !important;\n\tpadding-bottom: 0 !important; }\n\n@mixin prints-space-bottom-md() {\n\tmargin-top: 0 !important;\n\tmargin-bottom: 1cm !important;\n\tpadding-bottom: 0 !important; }\n\n@mixin prints-space-bottom-lg() {\n\tmargin-bottom: 1.5cm !important;\n\tpadding-bottom: 0 !important; }\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ конец\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"../utils/variables\";\n@import \"../utils/mixins\";\n@import \"../../libs/include-media/dist/include-media\";\n\n/*base */\nhtml {\n  font-size: 62.5%; }\n\nbody {\n  @include font-normal;\n  font-size: $font-size;\n  line-height: $line-height;\n  -webkit-font-smoothing: antialiased;\n  height: 100%;\n\n  color: $text-color;\n  background: $bg-color url(../../img/empty.png) repeat fixed;\n  min-width: 320px;\n\n  @include media('<mob') {\n    @include font($font-size, 1.7); } }\n\nh1, h2, h3, h4, h5, h6 {\n  padding: 0;\n  @include font-title;\n  color: $title-color;\n  margin: 0 0 $bottom-space;\n\n  @include media('<mob') {\n    margin: 0 0 round-float($bottom-space*0.85, 1); } }\n\nh1 {\n  font-weight: 300;\n  @include font-h1; }\n\nh2 {\n  @include font-h2;\n\n  &::before {\n    content: '§ ';\n    display: inline; } }\n\nh3 {\n  @include font-h3; }\n\nh4 {\n  @include font($font-size-h4, $line-height-h4); }\n\nh5 {\n  @include font($font-size-h5, $line-height-h5); }\n\nh6 {\n  @include font-normal;\n  @include font($font-size-h6, $line-height-h6);\n  text-transform: uppercase; }\n\n.text-title {\n  @include font-bold;\n  font-size: 1.8rem;\n  line-height: $line-height;\n  margin-bottom: $bottom-space/2;\n\n  .content & + ul,\n  .content & + ol,\n  .content & + table {\n    margin-top: $bottom-space/2; } }\n\np {\n  padding: 0;\n  margin: 0 0 $bottom-space;\n\n  @include media('<mob'); }\n\n\nhr {\n  line-height: 1px;\n  height: 0;\n  border: none;\n  background: none;\n  border-bottom: 1px solid $border-color;\n  margin-bottom: $bottom-space; }\n\na {\n  color: $link-color;\n  text-decoration: underline;\n  cursor: default;\n  //outline: none\n\n  &:link {\n    cursor: pointer; }\n\n  .no-touchevents &:hover {\n    text-decoration: none; }\n\n  &[href^=\"tel\"],\n  .no-touchevents &[href^=\"tel\"]:hover {\n    text-decoration: none !important;\n    color: inherit;\n    cursor: default; }\n\n  &[href^=\"javascript:\"] {\n    cursor: default; } }\n\n.bd-lead {\n  @include font(2.3rem, 3.5rem);\n  font-weight: 300; }\n\nimg {\n  border: none;\n  vertical-align: top;\n  max-width: 100%;\n\n  table & {\n    max-width: none; } }\n\n.table-auto {\n  position: relative;\n  overflow: auto;\n  max-width: 100%;\n  -webkit-overflow-scrolling: touch;\n  margin: 0 0 $bottom-space;\n\n  table {\n    margin-bottom: 0;\n    width: auto;\n    min-width: 100%; } }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n\n  td, th {\n    font-size: 1.4rem;\n    line-height: 1.8rem;\n    color: $text-color;\n    text-align: left;\n    padding: 1rem 1.2rem;\n    box-sizing: border-box;\n    border-color: $border-color; } }\n\nb, strong, th {\n  @include font-bold; }\n\ni, em {\n  @include font-italic; }\n\ni b, i strong, em b, em strong, b i, b em, strong i, strong em {\n  @include font-bold-italic; }\n\n//code, pre\n//isplay: block\n//adding: 8px\n//olor: $text-color-light\n//ackground-color: $bg-color-light\n//ont-size: $font-size-small\n//argin: 0 0 $bottom-space\n\n.mark {\n  color: $mark-color;\n  font-style: inherit;\n  font-weight: inherit; }\n\n.text-color-alt {\n  color: $text-color-light; }\n\n.align-center {\n  text-align: center; }\n\n.nobr {\n  white-space: nowrap; }\n\n.bottom-space {\n  margin-bottom: $bottom-space; }\n\n.hide {\n  font-size: 0;\n  line-height: 0; }\n\n@include media('<desk') {\n  .hide-desk-s {\n    display: none !important; } }\n\n@include media('<desk-s') {\n  .hide-lap {\n    display: none !important; } }\n\n@include media('<lap') {\n  .hide-net {\n    display: none !important; } }\n\ncode.l, code.red, code.green {\n  display: inline;\n  padding: 0 2px;\n  margin: 0; }\n\n.green {\n  color: lightseagreen; }\n\n.red {\n  color: lightcoral; }\n\n.gray {\n  color: #999; }\n\n.warning {\n  display: block;\n  background-image: url(../../img/icon-warning.svg);\n  background-repeat: no-repeat;\n  background-position: 10px 10px;\n  background-size: 24px;\n  padding: 10px 10px 10px 45px;\n  //border: 1px solid $base-color\n  background-color: rgba($base-color, 0.1); }\n\n.#{$article-content} {\n  @each $tags in h2, h3, h4, h5 {\n    p + #{$tags},\n    ul + #{$tags},\n    ol + #{$tags} {\n      margin-top: $bottom-space;\n\n      @include media('<mob') {\n        margin-top: round-float($bottom-space*0.85, 1); } } } }\n\n/*base end */\n\n\n\n/*table */\n.#{$article-content} {\n  table {\n    margin-bottom: $bottom-space; }\n\n  .table-auto table {\n    margin-bottom: 0; }\n\n  .tbl {\n    border: none;\n\n    td,\n    th {\n      color: $text-color;\n      background-color: $bg-color-alt;\n      border: 0 solid $border-color;\n      font-size: 1.4rem;\n      line-height: 1.2;\n\n      &:first-child,\n      &:first-child {\n        border-left-width: 1px; }\n\n      &:last-child,\n      &:last-child {\n        border-right-width: 1px; } }\n\n    td {\n      border-top-width: 1px; }\n\n    tbody tr:first-child td {\n      border-top-width: 0; }\n\n    tbody tr:nth-child(even) td {\n      background: #fafafa; }\n\n    th,\n    thead td {\n      @include font-bold;\n      font-size: 1.6rem;\n      text-align: left; }\n\n    th,\n    thead td,\n    tfoot td {\n      background: $bg-color-alt;\n      color: $text-color-light;\n      border-color: $bg-color-alt;\n      border-top-width: 0; } } }\n/*table end */\n\n/*blockquote */\n.#{$article-content} {\n  .blockquote {\n    margin: $bottom-space 0; }\n\n  blockquote {\n    display: block;\n    margin: 0;\n    padding: 0;\n\n    q {\n      display: block;\n      position: relative;\n      margin: 0;\n      padding: 0;\n      @include font-normal;\n      @include font(2rem, 1.5);\n      color: $text-color;\n      z-index: 5;\n\n      @include media('<mob') {\n        @include font(1.6rem, 1.7); }\n\n      &:before,\n      &:after {\n        @include pseudo($pos: relative);\n        //background: url(../../img/quote-left.svg) no-repeat\n        background-size: contain;\n        @include size(40px, 35px);\n        z-index: -1; }\n\n      &:before {\n        //content: '«'\n        content: '';\n        margin: 0 0 20px 30%;\n\n        @include media('<mob') {\n          margin-bottom: 10px;\n          margin-left: -10px; } }\n\n      &:after {\n        //content: '»'\n        content: '';\n        margin: 20px 30% 0 auto;\n        transform: rotate(180deg);\n\n        @include media('<mob') {\n          content: none;\n          display: none; } } }\n\n    cite {\n      text-align: right;\n      display: block;\n      margin-left: auto;\n      @include font-title;\n      font-size: $font-size;\n      line-height: $line-height;\n      color: $text-color; } } }\n/*blockquote end */\n\n/*content img */\n.imgc {\n  text-align: center;\n  padding-bottom: #{round-float($bottom-space * 3, 1)};\n  clear: both; }\n\n.imgl {\n  text-align: left;\n  float: left;\n  margin: $bottom-space*0.3 #{round-float($bottom-space * 3, 1)} #{round-float($bottom-space * 3, 1)} 0;\n  max-width: 50%; }\n\n.imgr {\n  text-align: right;\n  float: right;\n  margin: $bottom-space*0.3 0 #{round-float($bottom-space * 3, 1)} #{round-float($bottom-space * 3, 1)};\n  max-width: 50%; }\n\n@include media('<tab') {\n  .imgl, .imgr {\n    float: none;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: none; } }\n\n/*content img end */\n\n/*view print */\n.view-print {\n  display: inline-block;\n  vertical-align: top;\n  padding: 4px 18px;\n  background: white;\n  font-size: 16px;\n  line-height: 30px;\n  color: $text-color-light;\n  border: 1px solid $text-color-light;\n  text-decoration: none;\n  margin-bottom: $bottom-space;\n  transition-property: background-color, color;\n  transition-duration: $animation-speed;\n\n  .no-touchevents &:hover {\n    background-color: $text-color-light;\n    color: white; }\n\n  &:active {\n    transform: scale(0.98); }\n\n  svg {\n    width: 21px;\n    height: 21px;\n    vertical-align: middle;\n    margin-right: 10px;\n\n    path {\n      fill: $text-color-light;\n      transition-property: fill;\n      transition-duration: $animation-speed; } }\n\n  .no-touchevents &:hover path {\n    fill: white; }\n\n  span {\n    display: inline-block;\n    vertical-align: middle; }\n\n  @include media('<tab') {\n    font-size: 14px; }\n\n  @include media('<mob') {\n    & svg {\n      margin-right: 0; }\n\n    & span {\n      display: none; } } }\n/*view print end*/\n\n/*video */\n.video-holder {\n  position: relative;\n  padding-bottom: 62%;\n  padding-top: 25px;\n  height: 0; }\n\n.video-holder iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%; }\n/*video end */\n\ninput[type=\"radio\"], input[type=\"checkbox\"] {\n  width: 15px;\n  height: 15px; }\n\n/* snippet */\n.btn {\n  position: relative;\n  display: inline-block;\n  padding: 6px 12px;\n  font-size: 13px;\n  font-weight: 700;\n  line-height: 20px;\n  color: #333;\n  white-space: nowrap;\n  vertical-align: middle;\n  cursor: pointer;\n  background-color: #eee;\n  background-image: linear-gradient(#fcfcfc, #eeeeee);\n  border: 1px solid #d5d5d5;\n  border-radius: 3px;\n  user-select: none;\n  -webkit-appearance: none; }\n\n.btn i {\n  font-style: normal;\n  font-weight: 500;\n  opacity: 0.6; }\n\n.btn .octicon {\n  vertical-align: text-top; }\n\n.btn .counter {\n  text-shadow: none;\n  background-color: #e5e5e5; }\n\n.btn:focus {\n  text-decoration: none;\n  border-color: #51a7e8;\n  outline: 0;\n  box-shadow: 0 0 5px rgba(81, 167, 232, 0.5); }\n\n.btn:focus:hover, .btn.selected:focus {\n  border-color: #51a7e8; }\n\n.btn:hover, .btn:active, .btn.zeroclipboard-is-hover, .btn.zeroclipboard-is-active {\n  text-decoration: none;\n  background-color: #ddd;\n  background-image: linear-gradient(#eeeeee, #dddddd);\n  border-color: #cccccc; }\n\n.btn:active, .btn.selected, .btn.zeroclipboard-is-active {\n  background-color: #dcdcdc;\n  background-image: none;\n  border-color: #b5b5b5;\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15); }\n\n.clippy {\n  margin-top: -3px;\n  position: relative;\n  top: 3px;\n  vertical-align: baseline; }\n\n.btn[disabled] .clippy {\n  opacity: 0.3; }\n\n.snippet {\n  position: relative;\n  overflow: visible; }\n\n.snippet code {\n  font-size: 14px;\n  line-height: 20px; }\n\n.snippet .btn {\n  transition: opacity .3s ease-in-out;\n  opacity: 0;\n  padding: 2px 6px;\n  position: absolute;\n  right: 4px;\n  top: 4px; }\n\n.snippet:hover .btn, .snippet .btn:focus {\n  opacity: 1; }\n\n@media screen and (max-width: 768px) {\n  .snippet .btn {\n    opacity: 1; } }\n\n.example + .snippet .btn {\n  top: 22px;\n  right: 2px; }\n\n/* snippet end */\n\n/* hljs */\n.hljs {\n  background-color: #f0f0f0; }\n/* hljs end */\n\n/* separator */\n.separator {\n  background: url(../../img/icon-separator.svg) no-repeat center; }\n\n/* separator end */\n\n/* article elements */\n.#{$article-content} {\n  // list\n  $list-space: 1.5rem !default;\n  ul, ol {\n    margin: 0 0 $bottom-space;\n    padding: 0;\n    list-style: none;\n    font-size: 1.6rem;\n    line-height: 2.4rem;\n\n    li {\n      padding-left: $list-space;\n      margin: 0 0 1.2rem;\n      position: relative; } }\n\n  ul {\n    & > li {\n      &::before {\n        content: '—';\n        display: block;\n        float: left;\n        margin: 0 0 0 -#{$list-space};\n        color: $base-color; } } }\n\n  ol {\n    $list-space: 1.5rem;\n    counter-reset: section;\n\n    & > li {\n      counter-increment: section;\n      padding-left: $list-space;\n\n      &::before {\n        display: block;\n        float: left;\n        content: counter(section) \".\";\n        margin: 0 0 0 -#{$list-space};\n        color: $base-color; } } }\n\n  ul, ol {\n    ul, ol {\n      margin: round-float($bottom-space * 0.5, 1) 0; } } }\n","// =============================================================================\n// pow\n// =============================================================================\n/// Возведение в степень\n///\n/// @param {Number, Length} $number - Число\n/// @param {Number, Length} $exponent - Степень\n/// @return {Number} - Значение `$number` возведенно в степень `$exponent`\n\n@function pow($number, $exponent) {\n\t$value: 1;\n\n\t@if $exponent > 0 {\n\t\t@for $i from 1 through $exponent {\n\t\t\t$value: $value * $number; } }\n\n\t@return $value; }\n\n// =============================================================================\n// round-float\n// =============================================================================\n/// Округление до n знаков после запятой\n///\n/// @param {Number, Length} $number - Число\n/// @param {Number, Length} $n - Количество знаков после запяной\n/// @return {Number} - Значение округленное до `n` знаков после запятой\n\n@function round-float($number, $n) {\n\t$float: pow(10,$n);\n\n\t$value: round($number*$float)/$float;\n\n\t@return $value; }\n"]}